data <- read.csv("E:/towork/study/r-studio/projects/randomforrest/data2/CTG.csv", header = TRUE  )
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest", header = TRUE  )
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest/data2", header = TRUE  )
setwd("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest")
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest/data2", header = TRUE  )
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest/data2/CTG.csv", header = TRUE  )
str(data)
View(data)
data$NSP <- as.factor(data$NSP)
table(data$NSP)
set.seed(123)
ind <- sample(2, nrow(data), replace = TRUE,prob = c(0.7,0.3))
train <- data[ind==1,]
test <- data[ind==2,]
View(train)
x <- 1:12
x
ssample(x)
sample(x)
sample(x, replace = True)
sample(x, replace = TRUE)
View(test)
set.seed(123)
ind <- sample(2, nrow(data), replace = TRUE,prob = c(0.7,0.3))
train <- data[ind==1,]
test <- data[ind==2,]
install.packages("randomForest")
library(randomForest)
rf <- randomForest(NSP ~ ., data = train)
print(rf)
attributes(rf)
rf <- randomForest(NSP ~ ., data = train)
print(rf)
attributes(rf)
rf$mtry
library(caret)
p1 <- predict(rf, train)
confusionMatrix(p1, train$NSP)
p2 <- predict(rf, test)
confusionMatrix(p2, test$NSP)
plot(rf)
t <- tuneRF(train[,-22], train[,22],
stepFactor = 0.5,
plot = TRUE,
ntreeTry=300,
trace = TRUE,
import=0.05)
View(train)
View(data)
View(rf)
t <- tuneRF(train[,-22], train[,22],
stepFactor = 0.5,
plot = TRUE,
ntreeTry=300,
trace = TRUE,
import=0.05)
t <- tuneRF(train[,-22], train[,22],
stepFactor = 0.5,
plot = TRUE,
ntreeTry=300,
trace = TRUE,
improve = 0.05)
rf <- randomForest(NSP ~ ., data = train,
ntree=300,
mtry=8,
importance=TRUE,
Proximity=TRUE)
print(rf)
p1 <- predict(rf, train)
confusionMatrix(p1, train$NSP)
p2 <- predict(rf, test)
confusionMatrix(p2, test$NSP)
hist(treesize(rf),
main= "No. Nodes for the Trees",
col="green")
varImpPlot(rf,
sort=T,
n.var = 10,
main="Top 10")
importance(rf)
varUsed(rf) # lower number means No importancy
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest/data2/CTG.csv", header = TRUE  )
str(data)
data <- read.csv("E:/towork/study/r-studio/projects/R_F/rprojects/randomforrest/data2/CTG.csv", header = TRUE  )
str(data)
data$NSP <- as.factor(data$NSP)
table(data$NSP)
set.seed(123)
ind <- sample(2, nrow(data), replace = TRUE,prob = c(0.7,0.3))
train <- data[ind==1,]
test <- data[ind==2,]
rf <- randomForest(NSP ~ ., data = train)
print(rf)
attributes(rf)
rf$mtry
library(caret)
p1 <- predict(rf, train)
confusionMatrix(p1, train$NSP)
p2 <- predict(rf, test)
confusionMatrix(p2, test$NSP)
plot(rf)
t <- tuneRF(train[,-22], train[,22],
stepFactor = 0.5,
plot = TRUE,
ntreeTry=300,
trace = TRUE,
improve = 0.05)
rf <- randomForest(NSP ~ ., data = train,
ntree=300,
mtry=8,
importance=TRUE,
Proximity=TRUE)
print(rf)
p1 <- predict(rf, train)
confusionMatrix(p1, train$NSP)
p2 <- predict(rf, test)
confusionMatrix(p2, test$NSP)
hist(treesize(rf),
main= "No. Nodes for the Trees",
col="green")
varImpPlot(rf,
sort=T,
n.var = 10,
main="Top 10")
importance(rf)
varUsed(rf) # lower number means No importancy
partialPlot(rf,train, ASTV,"1")
getTree(rf,1,labelVar = TRUE) # paitent no 9 is pathology
MDSplot(rf, train$NSP)
MDSplot(rf, train$NSP)
